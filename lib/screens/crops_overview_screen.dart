import 'package:flutter/material.dart';

class CropsOverviewScreen extends StatefulWidget {
  const CropsOverviewScreen({super.key});

  @override
  State<CropsOverviewScreen> createState() => _CropsOverviewScreenState();
}

class _CropsOverviewScreenState extends State<CropsOverviewScreen> {
  List<Map<String, dynamic>> crops = [];
  bool isLoading = true;
  bool isNepali = false; // üî• Language toggle state

  @override
  void initState() {
    super.initState();
    _fetchCrops();
  }

  Future<void> _fetchCrops() async {
    await Future.delayed(const Duration(seconds: 2));

    setState(() {
      crops = [
        {
          'name': 'Tomato',
          'name_ne': '‡§ó‡•ã‡§≤‡§≠‡•á‡§Ç‡§°‡§æ',
          'price': 80,
          'quantity': 50,
          'farmer': 'Sita Farmer',
          'farmer_ne': '‡§∏‡§ø‡§§‡§æ ‡§ï‡§ø‡§∏‡§æ‡§®',
        },
        {
          'name': 'Cabbage',
          'name_ne': '‡§¨‡§®‡•ç‡§¶‡§ó‡•ã‡§≠‡•Ä',
          'price': 60,
          'quantity': 30,
          'farmer': 'Ram Supplier',
          'farmer_ne': '‡§∞‡§æ‡§Æ ‡§∏‡§™‡•ç‡§≤‡§æ‡§Ø‡§∞',
        },
      ];
      isLoading = false;
    });
  }

  /// üî• Translation function
  String tr(String en, String ne) {
    return isNepali ? ne : en;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(tr('Crops Overview', '‡§¨‡§æ‡§≤‡•Ä‡§π‡§∞‡•Ç‡§ï‡•ã ‡§Ö‡§µ‡§≤‡•ã‡§ï‡§®')),
        actions: [
          IconButton(
            icon: const Icon(Icons.language),
            tooltip: tr('Switch Language', '‡§≠‡§æ‡§∑‡§æ ‡§™‡§∞‡§ø‡§µ‡§∞‡•ç‡§§‡§® ‡§ó‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç'),
            onPressed: () {
              setState(() {
                isNepali = !isNepali;
              });
            },
          ),
        ],
      ),
      body: isLoading
          ? const Center(child: CircularProgressIndicator())
          : crops.isEmpty
              ? Center(child: Text(tr('No crops listed.', '‡§ï‡•Å‡§®‡•à ‡§¨‡§æ‡§≤‡•Ä ‡§∏‡•Ç‡§ö‡•Ä‡§¨‡§¶‡•ç‡§ß ‡§õ‡•à‡§®‡•§')))
              : ListView.builder(
                  itemCount: crops.length,
                  itemBuilder: (context, index) {
                    final crop = crops[index];
                    return Card(
                      margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                      child: ListTile(
                        leading: const Icon(Icons.eco, color: Colors.green),
                        title: Text(tr(crop['name'], crop['name_ne'])),
                        subtitle: Text(
                          "${tr('Farmer', '‡§ï‡§ø‡§∏‡§æ‡§®')}: ${tr(crop['farmer'], crop['farmer_ne'])}\n"
                          "${tr('Quantity', '‡§™‡§∞‡§ø‡§Æ‡§æ‡§£')}: ${crop['quantity']} kg\n"
                          "${tr('Price', '‡§Æ‡•Ç‡§≤‡•ç‡§Ø')}: Rs. ${crop['price']}/kg",
                        ),
                        isThreeLine: true,
                      ),
                    );
                  },
                ),
    );
  }
}
